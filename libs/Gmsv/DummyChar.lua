---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ralu.
--- DateTime: 2021/9/23 17:59
---

local takeBufferedChar = ffi.cast('uint32_t (__cdecl*)(int type)', 0x0042BC00);
local clearCharData = ffi.cast('int (__cdecl*)(uint32_t a1)', 0x0042BDE0);
local newChar = ffi.cast('int (__cdecl*)(uint32_t a1, int a2, int a3)', 0x00438D80);
local addCharaToMap = ffi.cast('int (__cdecl*)(int type, uint32_t charAddr, int mapId, int floor, int x, int y)', 0x00414930);
local Broadcast_ObjectState = ffi.cast('int (__cdecl*)(int objIndex)', 0x0043FEF0);
function Char.CreateDummy()
  local charPtr = takeBufferedChar(0)
  if charPtr < Addresses.CharaTablePTR then
    return -1;
  end
  printAsHex('charPtr', charPtr);
  clearCharData(charPtr)
  printAsHex('clearCharData', charPtr);
  newChar(charPtr, 11, 1)
  printAsHex('newChar', charPtr);
  local charIndex = ffi.readMemoryInt32(charPtr + 4);
  printAsHex('charPtr2', Addresses.CharaTablePTR + charIndex * 0x21EC);
  ffi.setMemoryInt32(charPtr + 0x5e8 + 0x12c, 1);
  ffi.setMemoryInt32(charPtr, 1);
  ffi.setMemoryInt32(charPtr + 4 * CONST.CHAR_类型, 1);
  ffi.setMemoryInt32(charPtr + 4 * CONST.CHAR_地图类型, 0);
  ffi.setMemoryInt32(charPtr + 4 * CONST.CHAR_地图, 777);
  ffi.setMemoryInt32(charPtr + 4 * CONST.CHAR_X, 20);
  ffi.setMemoryInt32(charPtr + 4 * CONST.CHAR_Y, 90);
  --Char.SetData(charIndex, CONST.CHAR_图类, image);
  ffi.setMemoryInt32(charPtr + 4 * CONST.CHAR_原形, 100000);
  ffi.setMemoryInt32(charPtr + 4 * CONST.CHAR_原始图档, 100000);
  local objectIndex = addCharaToMap(1, charPtr, 0, 777, 20, 90);
  ffi.setMemoryInt32(charPtr + 4 * CONST.CHAR_OBJ, objectIndex);
  Broadcast_ObjectState(objectIndex);
  return charIndex;
end

function Char.DelDummy(charIndex)
  return NL.DelNpc(charIndex)
end
